# Deployment
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ include "grafana-dashboard-gateway.name" . }}
  namespace: {{ .Values.global.namespace }}
  labels:
    app: grafana-dashboard-gateway
  annotations: {{ include "global.annotations.standard" . | indent 4 }}
    deployment.kubernetes.io/revision: "1"
  generation: 1
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: grafana-dashboard-gateway
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      name: grafana-dashboard-gateway
      annotations:
        Release.Name: {{ .Release.Name }}
        Chart.Name: {{ .Chart.Name }}
      labels:
        app: grafana-dashboard-gateway
    spec:
      serviceAccountName: {{ include "grafana-dashboard-gateway.name" . }}
      containers:
      - name: grafana-dashboard-gateway
        image: {{ .Values.image.repo }}/condel/grafana-dashboard-gateway:{{ .Chart.AppVersion }}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5858
        securityContext:
          privileged: false
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - name: config
          mountPath: /etc/config/{{ include "grafana-dashboard-gateway.name" . }}
        - name: secret
          mountPath: /etc/secret/{{ include "grafana-dashboard-gateway.name" . }}
        {{ if .Values.dev.code.mount }}
        - name: code
          mountPath: /usr/src
        {{ end }}
      volumes:
      - name: config
        configMap:
          name: {{ include "grafana-dashboard-gateway.name" . }}
      - name: secret
        secret:
          secretName: {{ include "grafana-dashboard-gateway.name" . }}
      - name: code
        hostPath:
          path: {{ .Values.dev.code.path }}
